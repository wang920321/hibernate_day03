<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping package="cn.itheima.domain">
   
    <class name="User" table="sys_user">
    
        <id name="user_id" >
            <!--generator:主键生成策略 。 每条记录录入时，主键的生成策略(7个)
                   identity:主键自增     由数据库来维护主键值，录入时不需要指定主键   
                   increment（开发不用   了解）: 主键自增 由hibernate来维护，每次插入前会先查询表中id最大值+1作为新主键值     
                   sequence:Oracle中的主键生成策略  
                   hilo(了解): 高低位算法.主键自增.由hibernate来维护.开发时不使用.
				   native:hilo+sequence+identity 自动三选一策略.
				   uuid: 产生随机字符串作为主键. 主键类型必须为string 类型.
				   assigned:自然主键生成策略. hibernate不会管理主键值.由开发人员自己录入.  
             -->
            <generator class="native"></generator>
        </id>
       
        
        <property name="user_code" ></property>
        <property name="user_name" ></property>
        <property name="user_password" ></property>
        <property name="user_state" ></property>
     
		  <!--多对多关系
		    name:集合属性名
		    table:配置中间表名
		      key中的column:外键，别人引用“我”的外键
		      <many-to-many class="Role" column="role_id"></many-to-many>中
		                    class:我与哪个类是多对多关系。column:外键，我引用别人的外键
		    -->
		    <!-- cascade级联操作:
		 			save-update: 级联保存更新
		 			delete:级联删除
		 			all:级联保存更新+级联删除
		 	结论: cascade简化代码书写.该属性使不使用无所谓. 建议要用只用save-update.
		 		 如果使用delete操作太过危险.尤其在多对多中.不建议使用.
		 			 --> 
        <set name="roles" table="sys_user_role" cascade="save-update">
            <key column="user_id"></key>
            <many-to-many class="Role" column="role_id"></many-to-many>
        </set>
    </class>
</hibernate-mapping>    